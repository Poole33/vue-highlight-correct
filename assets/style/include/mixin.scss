/*
  sass混合
*/

@mixin bg-image($url) {
	background: url($url) no-repeat;
	background-size: 100% 100%;
}


@mixin vertical-center {
	position: absolute;
	top: 50%;
	transform: translate(0, -50%);
}

@mixin horizontal-center {
	position: absolute;
	left: 50%;
	transform: translate(-50%, 0);
}

@mixin all-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin flex-center ($justify: center, $align: center, $dir: row) {
    display: flex;
    flex-direction: $dir;
    justify-content: $justify;
    align-items: $align;
}


@mixin borderRadius($param){
    -webkit-border-radius: $param;
    -moz-border-radius: $param;
    border-radius: $param;
}

@mixin gra($begin,$end){
    zoom: 1;
    background-image: -webkit-gradient(linear, left top, left bottom, from($begin), to($end));
    background-image: -webkit-linear-gradient(top, $begin, $end);
    background-image:    -moz-linear-gradient(top, $begin, $end);
    background-image:     -ms-linear-gradient(top, $begin, $end);
    background-image:      -o-linear-gradient(top, $begin, $end);
    background-image:         linear-gradient(top, $begin, $end);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr="#{ie-hex-str($begin)}", EndColorStr="#{ie-hex-str($end)}");
}

@mixin graDeg($deg,$begin,$end){
    background-image: -webkit-gradient($deg, from($begin), to($end));
    background-image: -webkit-linear-gradient($deg, $begin, $end);
    background-image:    -moz-linear-gradient($deg, $begin, $end);
    background-image:      -o-linear-gradient($deg, $begin, $end);
    background-image:         linear-gradient($deg, $begin, $end);
}

@mixin gradient($value){
    background: -webkit-linear-gradient($value);
    background:    -moz-linear-gradient($value);
    background:      -o-linear-gradient($value);
    background:         linear-gradient($value);
}

@mixin opacityColor($color,$trans){
    $rgba: rgba($color, $trans);
    background: $rgba;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr="#{ie-hex-str($rgba)}", EndColorStr="#{ie-hex-str($rgba)}");
    .ie9 &{
        filter: none;
    }
}


@mixin rotate($degrees){
    zoom: 1;
    -moz-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    -webkit-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    transform: rotate($degrees);
}


@mixin scale($x, $y){
    zoom: 1;
    -moz-transform: scale($x, $y);
    -o-transform: scale($x, $y);
    -webkit-transform: scale($x, $y);
    -ms-transform: scale($x, $y);
    transform: scale($x, $y);
}

@mixin flexbox(){
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    box-orient: horizontal;
}

@mixin flexboxChild(){
    -webkit-box-flex: 1;
    -moz-box-flex: 1;
    -ms-flex: 1;
    box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
}

@mixin boxShadow($param){
    -moz-box-shadow: $param;
    -webkit-box-shadow: $param;
    box-shadow: $param;
}

@mixin boxShadowParameters($xNum,$yNum,$blurNum,$color,$style...){
    -webkit-box-shadow: $xNum $yNum $blurNum $color $style;
    -moz-box-shadow: $xNum $yNum $blurNum $color $style;
    -ms-box-shadow: $xNum $yNum $blurNum $color $style;
    -o-box-shadow: $xNum $yNum $blurNum $color $style;
    box-shadow: $xNum $yNum $blurNum $color $style;
}

@mixin hack($attr,$param){
    -moz-#{$attr}: #{$param};
    -webkit-#{$attr}: #{$param};
    -ms-#{$attr}: #{$param};
    -o-#{$attr}: #{$param};
    #{$attr}: #{$param};
}

@mixin horizontalCenter{
    @include hack(box-align, center);
    @include hack(justify-content, center);
}

@mixin verticalCenter{
    @include hack(box-pack,center);
    @include hack(align-items,center);
}

@mixin setTransition($style,$time,$function:linear,$delay:0s){
    -webkit-transition:$style $time $function $delay;
    -moz-transition:$style $time $function $delay;
    -o-transition:$style $time $function $delay;
    transition:$style $time $function $delay;
}

@mixin inlineBlock(){
    display: inline-block;
    *zoom:1;
    *display: inline;
}
